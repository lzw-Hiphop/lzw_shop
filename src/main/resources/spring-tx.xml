<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> <!-- 声明事务管理器 -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> <!-- 配置事务特性 -->

    <tx:advice id="tx" transaction-manager="transactionManager">
        <tx:attributes> <!--常见事务属性： [重点]1、REQUIRED :支持当前的事务，如果不存在就创建一个新的。这是最常用 的选择。 2、SUPPORTS :支持当前的事务，如果不存在就不使用事务。 3、MANDATORY :支持当前的事务，如果不存在就抛出异常。 4、REQUIRES_NEW :创建一个新的事务，并暂停当前的事务（如果存在）。 5、NOT_SUPPORTED :不使用事务，并暂停当前的事务（如果存在）。 6、NEVER :不使用事务，如果当前存在事务就抛出异常。 7、NESTED :如果当前存在事务就作为嵌入事务执行，否则与 PROPAGATION_REQUIRED 类似。 [重点]8、readOnly：表示该方法是只读的，而不能更新数据库里的数据 -->
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="do*" propagation="REQUIRED"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config> <!-- 收集你要拦截的类 -->
        <aop:pointcut expression="execution(* net.togogo.web.service.*Service.*(..))"
                      id="txcut"/> <!-- 把拦截的类交给哪个切面管理 -->
        <aop:advisor advice-ref="tx" pointcut-ref="txcut"/>
    </aop:config>

</beans>