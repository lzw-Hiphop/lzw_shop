<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.togogo.web.mapper.EcProductMapper" >
  <resultMap id="BaseResultMap" type="net.togogo.web.bean.EcProduct" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_desc" property="productDesc" jdbcType="VARCHAR" />
    <result column="store" property="store" jdbcType="INTEGER" />
    <result column="baseprice" property="baseprice" jdbcType="DOUBLE" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="writer" property="writer" jdbcType="VARCHAR" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="pages" property="pages" jdbcType="DECIMAL" />
    <result column="images" property="images" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, product_name, product_desc, store, baseprice, category_id, writer, publisher, 
    pages, images
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.togogo.web.bean.EcProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ec_product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ec_product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.togogo.web.bean.EcProductExample" >
    delete from ec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.togogo.web.bean.EcProduct" >
    insert into ec_product (product_id, product_name, product_desc, 
      store, baseprice, category_id, 
      writer, publisher, pages, 
      images)
    values (#{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, 
      #{store,jdbcType=INTEGER}, #{baseprice,jdbcType=DOUBLE}, #{categoryId,jdbcType=INTEGER}, 
      #{writer,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{pages,jdbcType=DECIMAL}, 
      #{images,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.togogo.web.bean.EcProduct" >
    insert into ec_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productDesc != null" >
        product_desc,
      </if>
      <if test="store != null" >
        store,
      </if>
      <if test="baseprice != null" >
        baseprice,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="writer != null" >
        writer,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="pages != null" >
        pages,
      </if>
      <if test="images != null" >
        images,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null" >
        #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="store != null" >
        #{store,jdbcType=INTEGER},
      </if>
      <if test="baseprice != null" >
        #{baseprice,jdbcType=DOUBLE},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="writer != null" >
        #{writer,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="pages != null" >
        #{pages,jdbcType=DECIMAL},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.togogo.web.bean.EcProductExample" resultType="java.lang.Integer" >
    select count(*) from ec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ec_product
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productDesc != null" >
        product_desc = #{record.productDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.store != null" >
        store = #{record.store,jdbcType=INTEGER},
      </if>
      <if test="record.baseprice != null" >
        baseprice = #{record.baseprice,jdbcType=DOUBLE},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.writer != null" >
        writer = #{record.writer,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null" >
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.pages != null" >
        pages = #{record.pages,jdbcType=DECIMAL},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ec_product
    set product_id = #{record.productId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_desc = #{record.productDesc,jdbcType=VARCHAR},
      store = #{record.store,jdbcType=INTEGER},
      baseprice = #{record.baseprice,jdbcType=DOUBLE},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      writer = #{record.writer,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      pages = #{record.pages,jdbcType=DECIMAL},
      images = #{record.images,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.togogo.web.bean.EcProduct" >
    update ec_product
    <set >
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null" >
        product_desc = #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="store != null" >
        store = #{store,jdbcType=INTEGER},
      </if>
      <if test="baseprice != null" >
        baseprice = #{baseprice,jdbcType=DOUBLE},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="writer != null" >
        writer = #{writer,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="pages != null" >
        pages = #{pages,jdbcType=DECIMAL},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.togogo.web.bean.EcProduct" >
    update ec_product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_desc = #{productDesc,jdbcType=VARCHAR},
      store = #{store,jdbcType=INTEGER},
      baseprice = #{baseprice,jdbcType=DOUBLE},
      category_id = #{categoryId,jdbcType=INTEGER},
      writer = #{writer,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      pages = #{pages,jdbcType=DECIMAL},
      images = #{images,jdbcType=VARCHAR}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>